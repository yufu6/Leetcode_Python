#Double pointer
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        slow, fast = 0, 0
        
        while fast < len(nums):
            
            if nums[fast] != nums[fast - 1] or fast == 0:
                nums[slow] = nums[fast]
                slow += 1
            fast += 1
            
        return slow
        
        
#Solution 2        
class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        
        #x=0 will failed testcase with only one num: [1]
        x = 1
        for i in range(len(nums) - 1):
            if nums[i] != nums[i+1]:
                nums[x] = nums[i+1]
                x += 1
        return x
            
